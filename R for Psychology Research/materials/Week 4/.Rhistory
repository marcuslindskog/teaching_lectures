options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(dev = 'svg')
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
library(tidyverse)
library(psych)
library(tibble)
as_tibble(bfi)
xaringan:::inf_mr()
tibble(
x = 1:10,
y = 1,
z = x^2 + y+1,
w = letters(10)
)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(dev = `svg`)
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
library(tidyverse)
library(psych)
library(tibble)
as_tibble(bfi) #<<
tibble(
x = 1:5,
y = 1,
z = x^2 + y+1,
w = letters[1:5]
)
tibble(
x = 1:5,
y = 1,
z = x^2 + y+1,
w = letters[1:5]
)
```
tibble(
x = 1:5,
y = 1,
z = x^2 + y+1,
w = letters[1:5]
)
```
tibble(
x = 1:5,
y = 1,
z = x^2 + y+1,
w = letters[1:5]
)
tibble(
x = 1:5,
y = 1,
z = x^2 + y+1
)
```
setwd("/Volumes/ipb-users-1/marli361/@Undervisning/@Kurser/FoU - R for Psychology Research/materials/Week 4")
library(psych)
data <- data("bfi")
write.csv(data, "bfi_data.csv")
heights
write_csv(heights, "heights_data.csv")
write.csv(heights, "heights_data.csv")
library(tidyverse)
write_csv(heights, "heights_data.csv")
write_csv(data, "bfi_data.csv")
write_csv(bfi, "bfi_data.csv")
read_csv("bfi_data.csv")
read_csv("heights_data.csv")
read_csv("bfi_data.csv")
spec()
spec(read_csv("bfi_data.csv"))
heights
filter(heights_data, height == 71)
filter(heights_data, height == 68, height == 71)
filter(heights_data, !(height ==68 | height == 71))
heights_data <- heights
filter(heights_data, height == 71)
filter(heights_data, height == 68, height == 71)
filter(heights_data, !(height ==68 | height == 71))
filter(heights_data, height %in% c(68, 70, 71))
library(ma)
arrange(heights_data, height, cubits)
heights_data
arrange(heights_data, cubits)
heights_data <- read_csv("heights_data.csv")
arrange(heights_data, cubits)
as_tibble(heights_data)
arrange(heights_data, cubits)
flights
arrange(bfi)
arrange(bfi, A1)
bfi_data <- read_csv("bfi_data.csv")
#arrange(data_frame, column_to_arrange_1, column_to_arrange_2,...)
arrange(bfi_data, A1, A2)
arrange(bfi_data, desc(A1), A2)
new_filtered_arranged_data <- bfi_data %>%
filter(A1 %in% c(1,2,3)) %>%
arrange(desc(A1), A2)
new_filtered_arranged_data
unique(bfi_data$A1)
unique(new_filtered_arranged_data$A1)
select(bfi_data, A1, A2)
select(bfi_data, A1:C5)
select(bfi_data, -A1, -A2, -C5)
select(bfi_data, -A1:C5)
select(bfi_data, starts_with("A"))
select(bfi_data, ends_with("4"))
rename(bfi_data, A_1 = A1)
new_changed_data_frame <- bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
arrange(A_1, desc(A4))
bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
arrange(A_1, desc(A3))
mutate(
A = A1+A2+A3+A4,
B = (B1*B2)/(B3*B4)
)
mutate(bfi_data,
A = A1+A2+A3+A4,
B = (B1*B2)/(B3*B4)
)
bfi_data
mutate(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4)
)
bfi_data$B
bfi_data$C
transmute(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4)
)
2800/4
transmute(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4)
D = as_factor(rep(c("A", "B", "C", "D")), each = length(A)/2)
)
transmute(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4)
D = as_factor(rep(c("A", "B", "C", "D"), each = length(A)/2))
)
transmute(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4),
D = as_factor(rep(c("A", "B", "C", "D"), each = n()/2))
)
transmute(bfi_data,
A = A1+A2+A3+A4,
C = (C1*C2)/(C3*C4),
D = as_factor(rep(c("A", "B", "C", "D"), each = n()/4))
)
new_changed_data_frame <- bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
mutate(K = (A_1 + A_4)/A3)
arrange(K)
bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
mutate(K = (A_1 + A_4)/A3) %>%
arrange(K)
summarize(bfi_data,
a1_mean = mean(A1, na.rm = TRUE),
count = n(),
c1_na = sum(is.na(C1))
)
group_by(bfi_data, A1) %>%
summarize(a2_mean = mean(A2, na.rm = TRUE),
count = n(),
c1_na = sum(is.na(C1))
)
new_changed_data_frame
bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
mutate(K = (A_1 + A_4)/A3) %>%
arrange(K) %>%
group_by(A2, A3) %>%
summarize(mean_k = mean(K, na.rm = TRUE),
se_age = sd(age, na.rm(TRUE))/sqrt(sum(!is.na(K))))
bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
mutate(K = (A_1 + A_4)/A3) %>%
arrange(K) %>%
group_by(A2, A3) %>%
summarize(mean_k = mean(K, na.rm = TRUE),
se_age = sd(age, na.rm = TRUE)/sqrt(sum(!is.na(K))))
bfi_data %>%
select(starts_with("A")) %>%
rename(A_1 = A1, A_4 = A4) %>%
filter(A_4 %in% c(3,4,5)) %>%
mutate(K = (A_1 + A_4)/A3) %>%
arrange(K) %>%
group_by(A2, A3) %>%
summarize(mean_k = mean(K, na.rm = TRUE),
count = n(),
se_age = sd(age, na.rm = TRUE)/sqrt(sum(!is.na(K))))
table4a
table4a %>%
gather(1999:2000, key = "year", value = "population")
table4a %>%
gather(1:2, key = "year", value = "population")
table4a %>%
gather(2:3, key = "year", value = "population")
table4a %>%
gather(c("1999", "2000"), key = "year", value = "population")
table4a %>%
gather("1999", "2000", key = "year", value = "population")
table2 %>%
spreae(key = type, value = count)
table2 %>%
spread(key = type, value = count)
table3
table3 %>% separate(rate, c("cases", "population"), sep = "/")
table3 %>%
separate(rate, c("cases", "population"), sep = "/") %>%
unite(rate, cases, population, sep = "-")
